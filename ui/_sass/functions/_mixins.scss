$bezier: cubic-bezier(.25,0,0,1);
$bezier-bounce: cubic-bezier(.25,0,0,1.375);

$padding-v: 24px;
$padding-h: 7.5%;

@mixin font-sizing($size){
  $ratio: $size / $font-size-base;
  font-size: $size;
  line-height: ( $line-height-base - ( ( $ratio - 1 ) / 5 + .1 ) );
}

@mixin font-size-small(){ @include font-sizing($font-size-small); }
@mixin font-size-base(){ @include font-sizing($font-size-base); @include large-device { @include font-sizing($font-size-base-full); } }
@mixin font-size-large(){ @include font-sizing($font-size-large); @include large { @include font-sizing($font-size-large-full); } }
@mixin font-size-larger(){ @include font-sizing($font-size-larger); @include large { @include font-sizing($font-size-larger-full); } }
@mixin font-size-largest(){ @include font-sizing($font-size-largest); @include large { @include font-sizing($font-size-largest-full); } }

html .sntr, html.sntr body { @include font-size-base; }

@mixin placeholder-style($color, $style) {
  &::-webkit-input-placeholder { color: $color; font-style: $style; }
  &:-moz-placeholder { color: $color; font-style: $style; }
  &::-moz-placeholder { color: $color; font-style: $style; }
  &:-ms-input-placeholder { color: $color; font-style: $style; }
}

@mixin clean() { 
  margin: 0; 
  padding: 0; 
  border: 0;
  list-style-type: none; 
  li { 
    margin: 0; 
    padding: 0; 
    list-style-type: none; 
  }
}

@mixin inlinelist($dir:false) { 
  @include clean;
  @if $dir { text-align: $dir; }
  > li {
    display: inline-block;
    @if $dir == 'left' { margin-right: 1.5em; }
    @if $dir == 'right' { margin-left: 1.5em; }
    @if $dir == 'center' { margin-right: .75em; margin-left: .75em; }
    > a { display: block; }
  }
}

@mixin typography(){
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-smoothing: grayscale;
}

@mixin default-size() { 
  font-size: 1em;
  line-height: $line-height-base;
}

@mixin smallcaps() { 
  font-size: 10px;
  text-transform: uppercase;
  letter-spacing: .1em;
  color: $light;
  font-weight: bold;
  font-style: normal;
}

@mixin relative() {
	position: relative;
  * { 
		position: relative; 
	}
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  transition: $transition;
}

@mixin transitions($speed:.125s, $curve:$bezier) { @include transition(all $speed $curve); }

@mixin trans($transitions,$speed:.125s,$curve:$bezier) {
  -webkit-transition-property: $transitions;
  transition-duration: $transitions;
  -webkit-transition-duration: $speed;
  transition-duration: $speed;
  -webkit-transition-timing-function: $curve;
  transition-timing-function: $curve;
}

@mixin transform($transform,$origin:(50% 50%)) {
  -webkit-transform: $transform;
  -ms-transform: $transform;
  transform: $transform;
  -webkit-transform-origin: $origin;
  -ms-transform-origin: $origin;
  transform-origin: $origin;
}

@mixin filter($filter) {
  -webkit-filter: $filter;
  -moz-filter: $filter;
  -ms-filter: $filter;
  -o-filter: $filter;
  filter: $filter;
}

@mixin fill() {
  position: absolute;
  display: block;
  height: 100%;
  width: 100%;
  left: 0; 
  top: 0;
}

@mixin full() {
  position: absolute;
  display: block;
  left: 0; 
  top: 0;
  bottom: 0;
  right: 0;
}

@mixin cover($offset: 0) {
  position: absolute;
  display: block;
  bottom: $offset;
  right: $offset; 
  left: $offset; 
  top: $offset;
}

@mixin middle() {
  position: absolute;
  display: block;
  left: 0; 
  top: 0;
  bottom: 0;
  right: 0;
  margin: auto;
}

@mixin circle() { border-radius: 50%; }
@mixin round() { border-radius: $border-radius-base; }
@mixin pill($important: null) { border-radius: 200px $important; }

@mixin clear() { 
  &:after { 
    display: table; 
    content: ''; 
    clear: both; 
  } 
}

@mixin bookend(){
  &:first-child { margin-top: 0; }
  &:last-child { margin-bottom: 0; }
}

@mixin middle-child(){
  &:not(:first-child):not(:last-child) { @content; }
}

@mixin trim() { 
  > * { @include bookend; }
}

@mixin compact() { 
  * {
    margin-top: 0; 
    margin-bottom: 0; 
  }
}

@mixin supercompact() { 
  * {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
}

@mixin clip($lines:2){
  height: $line-height-base * $font-size-base * $lines;
  overflow: hidden;
}

@mixin table($align:baseline,$width:100%) {
  display: table; 
  width: $width;
  > * { 
    display: table-cell; 
    vertical-align: $align; 
  }
}

@mixin no-table() {
  &, > * { display: block; }
}

@mixin table-rows($align:baseline,$width:100%) {
  display: table; 
  width: $width;
  > * { 
    display: table-row;
    > * {
      display: table-cell; 
      vertical-align: $align; 
    }
  }
}

@mixin table-body($align:baseline,$width:100%) {
  display: table; 
  width: $width;
  > * { 
    @include table-rows($align);
    display: table-row-group;
  }
}

@mixin lockup($padding:0) {
  text-align: justify; font-size: 1px;
  > * { display: inline-block; @include font-size-base; padding: $padding; text-align: left; }
  &:after { content: ""; width: 100%; display: inline-block; }
}


@mixin caret($size:4px) {
  content: '';
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top: $size solid;
  border-right: $size solid transparent;
  border-left: $size solid transparent;
  
}

@mixin scrollbar($color: #e3e3e3) {
  &::-webkit-scrollbar              { background: transparent; width: 10px; height: 10px; }
  &::-webkit-scrollbar-button       { display: none; }
  &::-webkit-scrollbar-track        { background: transparent; }
  &::-webkit-scrollbar-track-piece  { background: transparent; }
  &::-webkit-scrollbar-thumb        { background: $color; @include transitions(); }
  &::-webkit-scrollbar-corner       { background: transparent; }
  &::-webkit-resizer                { background: transparent; }
	&:hover {
	  &::-webkit-scrollbar-thumb      { background: #ccc; }
	}
}

@mixin scroll(){
  overflow: auto;
  html.touch & {
    overflow: scroll;
    -webkit-overflow-scrolling: touch;
  }
}

@mixin touch-scroll($whitespace: normal){
  html.touch & {
    white-space: $whitespace;
    overflow: scroll !important;
    -webkit-overflow-scrolling: touch;
  }
}

@mixin box-normal() {
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

@mixin reveal-scroll(){
  overflow: auto;
}

@mixin stoic(){
	&:hover,
	&:active,
	&:focus { text-decoration: none; }
}

@mixin columns($count:4,$width:100px,$gap:0){
	-webkit-column-count: $count;
	-moz-column-count: $count;
	column-count: $count;
  -webkit-column-gap: $gap;
  -moz-column-gap: $gap;
  column-gap: $gap;
	-webkit-column-width: $width;
	-moz-column-width: $width;
	column-width: $width;
}

@mixin avoid-break {
  -webkit-column-break-inside: avoid; /* Chrome, Safari */
  page-break-inside: avoid;           /* Theoretically FF 20+ */
  break-inside: avoid-column;         /* IE 11 */
  // display:inline-block; 
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} { @content; }
  @-moz-keyframes #{$name} { @content; }
  @-o-keyframes #{$name} { @content; }
  @keyframes #{$name} { @content; }
}

@mixin font-face($name,$file,$id,$weight,$style) {
  font-family: '#{$name}';
  src: url('#{$file}.eot');
  src: url('#{$file}.eot?##{$id}') format('embedded-opentype'),
       url('#{$file}.woff2') format('woff2'),
       url('#{$file}.woff') format('woff'),
       url('#{$file}.ttf') format('truetype'),
       url('#{$file}.svg##{$id}') format('svg');
  font-weight: $weight;
  font-style: $style;
}

@mixin standard-shadow($simple:false){
  box-shadow: 0 2px 4px rgba(0,0,0,.1), 0 0 0 1px rgba(0,0,0,.04);
  @if ( $simple ) { box-shadow: 0 2px 4px rgba(0,0,0,.1); }
}

@mixin standard-shadow-hover($simple:false){
  box-shadow: 0 3px 6px rgba(0,0,0,.15), 0 0 0 1px rgba(0,0,0,.04);
  @if ( $simple ) { box-shadow: 0 3px 6px rgba(0,0,0,.15); }
}


@mixin standard-widget-border(){ box-shadow: 0 7px 7px rgba(0,0,0,.12), 0 0 0 1px rgba(0,0,0,.15);  }
@mixin standard-modal-border(){ box-shadow: 0 7px 7px rgba(0,0,0,.12), 0 0 0 1px rgba(0,0,0,.15);  }
@mixin standard-box-shadow(){ box-shadow: 0 1px 2px rgba(0,0,0,.12), 0 0 1px rgba(0,0,0,.15); }
@mixin standard-box-shadow-important(){ box-shadow: 0 1px 2px rgba(0,0,0,.12), 0 0 1px rgba(0,0,0,.15) !important; }
@mixin active-box-shadow($color: $yellow){ box-shadow: 0 4px 0 $color, 0 1px 2px rgba(0,0,0,.12), 0 0 1px rgba(0,0,0,.15); }

@function h($from:false, $to:false) {
  @if $from and $to {
    // nothing
  } @else {
    @if $from {
      $to: $from;
    }
  }
  @if $from == false { $from: 1; }
  @if $to == false { $to: 6; }
  @if $from == $to {
    @return 'h#{$from}, .h#{$from}';
  } @else {
    @return 'h#{$from}, .h#{$from},' + h($from+1, $to);
  }
}


@mixin animation($animation) {
  -webkit-animation: $animation;
       -o-animation: $animation;
          animation: $animation;
}

@include keyframes(spinning) { 0% { @include transform(rotate(0)); } 100% {  @include transform(rotate(360deg)); } }
@mixin spinning($duration:.5s,$timing: 0s) { @include animation(spinning $duration $timing linear infinite); }

@include keyframes(pulsing) { 0% { @include transform(scale(1)); opacity: .5; } 20% { @include transform(scale(1.5)); opacity: 1; } 40% { @include transform(scale(1)); opacity: .5; } }
@mixin pulsing($duration:2s,$timing: 0s) { @include animation(pulsing $duration $timing linear infinite); }

@mixin background($hue:transparent){
  background: $hue no-repeat 50% 50%;
  background-size: cover;
}

@mixin center(){
  position: absolute; margin: auto; top: 0; left: 0; right: 0; bottom: 0;
}

@mixin labels($size:small){
  text-transform: uppercase;
  font-weight: normal;
  font-weight: bold;
  letter-spacing: .1em;
  @if $size == small { font-size: 10px; }
  @if $size == medium { font-size: 12px; }
  @if $size == large { font-size: 13px; }
}

@mixin padding($type:0){
  @if $type == top { padding-top: $padding-v; }
  @if $type == bottom { padding-bottom: $padding-v; }
  @if $type == left { padding-left: $padding-h; }
  @if $type == right { padding-left: $padding-h; }
  @if $type == v { padding-top: $padding-v; padding-bottom: $padding-v; }
  @if $type == h { padding-left: $padding-h; padding-right: $padding-h; }
  @if $type == 0 { padding: $padding-v $padding-h; }
}

@mixin scrolling(){
  overflow: auto;
  html.touch & {
    overflow: scroll;
    -webkit-overflow-scrolling: touch;
  }
}

@mixin unselect(){
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none;   /* Chrome/Safari/Opera */
  -khtml-user-select: none;    /* Konqueror */
  -moz-user-select: none;      /* Firefox */
  -ms-user-select: none;       /* IE/Edge */
  user-select: none;   
}

@mixin gradient($start-color: #555, $end-color: #333, $deg: 0deg) {
  background-repeat: repeat-x;
  background-image: -webkit-linear-gradient($deg, $start-color, $end-color);
  background-image: -o-linear-gradient($deg, $start-color, $end-color);
  background-image: linear-gradient($deg, $start-color, $end-color);
}

@mixin sharpen(){
  image-rendering: optimizeSpeed;
  image-rendering: -moz-crisp-edges;
  image-rendering: -o-crisp-edges;
  image-rendering: -webkit-crisp-edges;
  image-rendering: pixelated;
  image-rendering: optimize-contrast;
  -ms-interpolation-mode: nearest-neighbor;
}

@mixin sans(){ font-family: $font-family-sans-serif; line-height: $line-height-base; }
@mixin serif(){
  //font-family: $font-family-serif; line-height: $line-height-serif-base;
}

@mixin object(){
  display: block;
  @include screen(){
    &, &:hover { box-shadow: 0 2px 4px rgba(0,0,0,.1), 0 0 0 1px rgba(0,0,0,.04); }
  }
  @include transitions(.375s);
}

@mixin block-link {
  color: $light !important;
  display: block;
  @include transitions(.5s);
  text-decoration: none !important;
  > * {
    background: white;
    @include object;
    @include object-hover;

  }
}

@mixin object-hover($big:false) {
  cursor: pointer;
  @include screen(){
    &:hover {
      @if $big { @include transform(perspective(1px) scale(1.07)); }
      @else { @include transform(perspective(1px) scale(1.02)); }
      box-shadow: 0 6px 8px rgba(0,0,0,.1), 0 0 0 1px rgba(0,0,0,.08);
    }
  }
}

@mixin flex{
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex-column{
  @include flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

@mixin flex-order($order) {
  -ms-flex-order: $order;
  -webkit-order: $order;
  order: $order;
}

@mixin flex-center(){
  -webkit-justify-content: center;
  -ms-justify-content: center;
  justify-content: center;
}

@mixin flex-justify(){
  -webkit-justify-content: space-between;
  -ms-justify-content: space-between;
  justify-content: space-between;
}

@mixin flex-middle(){
  -webkit-align-items: center;
  -ms-align-items: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-justify-content: center;
  justify-content: center;
}

@mixin flex-wrap(){
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

@mixin flex-grow(){
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

@mixin flex-weight($grow:1){
  -webkit-flex: $grow;
  -ms-flex: $grow;
  flex: $grow;
}

@mixin flexy($columns:2){
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -ms-flex-wrap: wrap;
  -moz-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  > * {
    -ms-flex-grow: 1;
    -moz-flex-grow: 1;
    -webkit-flex-grow: 1;
    flex-grow: 1;
    width: percentage(1/$columns);
  }
}

@mixin showcase($columns:5){
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -ms-flex-wrap: wrap;
  -moz-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;

}

@mixin flex-fixer(){
  html.no-flexbox & {
    font-size: 0;
    > * {
      display: inline-block;
      @include font-size-base;
      vertical-align: top;
    }
  }
}

// @mixin middle(){
//   @include flex;
//   @include flex-center;
// }

@mixin ellipsis(){
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@function column-range($from:1, $to:12) {
  @if $from == $to {
    @return '.col-xs-#{$from}, .col-sm-#{$from}, .col-md-#{$from}, .col-lg-#{$from}';
  } @else {
    @return '.col-xs-#{$from}, .col-sm-#{$from}, .col-md-#{$from}, .col-lg-#{$from},' + column-range($from+1, $to);
  }
}

@mixin check(){
  content: '';
  display: inline-block;
  border: 2px solid;
  border-top-width: 0;
  border-right-width: 0;
  height: 6px;
  width: 12px;
  @include transform(rotate(-45deg));
  margin: -6px .75em 0 0;
  vertical-align: middle;
}
