.btn {
	@include transitions(.25s);
	text-shadow: none;
	&:not(.btn-sm):not(.btn-lg){
		padding-top: ($padding-base-vertical - 1);
		@include font-size-base;
		height: $input-height-base;
	}
	+ .btn { margin-left: .5em; }
	&:active,
	&.active {
		@include box-shadow(none);
	}
	&[disabled],
	&.disabled {
		opacity: .375;
	}
	.table & {
		margin-top: -3px;
		margin-bottom: -2px;
	}
	&.btn-lg {
		height: $input-height-large;
		@include font-size-large;
	}
	background-repeat: repeat;
	background-position: 50% -1px;
	background-size: 105% 200%;
	&:hover, &:focus { background-position: 50% 95%; }
	&.btn-default { 
		box-shadow: none;
		&:hover, &:focus { background-color: $silver-dark; }
	}
	// &.btn-primary {
	// 	background-color: $green;
	// 	//@include gradient(adjust-hue($green,-15deg),adjust-hue($green,15deg),60deg);
	// }
	// &.btn-warning {
	// 	background-color: $yellow;
	// 	//@include gradient(adjust-hue($yellow,4deg),adjust-hue($yellow,-4deg),60deg);

	// }
	// &.btn-danger {
	// 	background-color: $red;
	// 	//@include gradient(adjust-hue($red,8deg),adjust-hue($red,-8deg),60deg);
	// }
	// &.btn-info {
	// 	background-color: $blue;
	// 	//@include gradient(adjust-hue($blue,-6deg),adjust-hue($blue,6deg),60deg);
	// }
	&.btn-block {
		padding-left: 10px;
		padding-right: 10px;
	}
	&:not(.btn-link) {
		font-weight: bold;
		@include standard-shadow(simple);
		&:hover {
			@include standard-shadow-hover;
		}
	}
	&.btn-default {
		font-weight: normal;
		box-shadow: none !important;
		display: inline-block;
	}
	&.btn-sm {
		height: $input-height-small;
	}
}

[data-size="small"] {
	.btn {
		display: block;
	}
}

.btn-link {
	//font-style: oblique;
	padding-left: $padding-base-horizontal/2 !important;
	padding-right: $padding-base-horizontal/2 !important;
}

.btn-text {
	background: transparent;
	font-style: oblique;
	padding-left: $padding-base-horizontal/2 !important;
	padding-right: $padding-base-horizontal/2 !important;
	color: $light;
	strong {
		font-weight: inherit;
		color: $dark;
	}
}

.btn-file {
	&:before { content: attr(data-placeholder); }
	&:after { content: attr(data-value); }
	cursor: pointer;
	input {
		position: absolute;
		opacity: .01;
	}
}
